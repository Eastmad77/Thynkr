# ─────────────────────────────────────────────────────────
# Netlify config for Whylee (PWA)
# - Static build (no build step)
# - SPA routing
# - Long-term caching for immutable assets
# - Secure CSP that allows Firebase, Stripe, GA/Ads (optional)
# - DO NOT declare secrets here; set them in Netlify UI env vars
# ─────────────────────────────────────────────────────────

[build]
  publish = "."
  command = ""

[functions]
  node_bundler = "esbuild"
  # Stripe is server-only; do not bundle into functions to reduce size.
  external_node_modules = ["stripe"]

# ── Redirects (SPA & well-known) ────────────────────────

# Serve well-known files directly (before catch-all)
[[redirects]]
  from = "/.well-known/*"
  to   = "/.well-known/:splat"
  status = 200

# Catch-all SPA fallback
[[redirects]]
  from = "/*"
  to   = "/index.html"
  status = 200

# ── Headers ─────────────────────────────────────────────

# Service worker should never be cached aggressively
[[headers]]
  for = "/service-worker.js"
  [headers.values]
    Cache-Control = "no-cache, no-store, must-revalidate"

# Immutable asset buckets (filenames or querystrings handle cache busting)
[[headers]]
  for = "/css/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/js/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/scripts/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/media/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/site.webmanifest"
  [headers.values]
    Cache-Control = "public, max-age=3600"

[[headers]]
  for = "/media/icons/*"
  [headers.values]
    Cache-Control = "public, max-age=604800"

# CORS for Netlify Functions
[[headers]]
  for = "/.netlify/functions/*"
  [headers.values]
    Access-Control-Allow-Origin = "*"
    Access-Control-Allow-Methods = "GET, POST, OPTIONS"
    Access-Control-Allow-Headers = "Content-Type, Authorization"

# Global security headers + CSP
# Notes:
# - 'self' covers your own origin including /.netlify/functions/*
# - Include 'unsafe-inline' for small inline scripts you already have (theme toggle). Remove if you inline-hash instead.
# - GA/Ads are optional—remove those hosts if you are not using them.
[[headers]]
  for = "/*"
  [headers.values]
    Content-Security-Policy = """
      default-src 'self';
      base-uri 'self';
      frame-ancestors 'self';
      img-src 'self' data: blob: https://www.google-analytics.com https://pagead2.googlesyndication.com;
      media-src 'self' data:;
      style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;
      script-src 'self' 'unsafe-inline' https://www.gstatic.com https://www.googletagmanager.com https://www.google-analytics.com https://pagead2.googlesyndication.com;
      connect-src 'self'
        https://firestore.googleapis.com
        https://www.googleapis.com
        https://firebaseinstallations.googleapis.com
        https://identitytoolkit.googleapis.com
        https://securetoken.googleapis.com
        https://firebasestorage.googleapis.com
        https://api.stripe.com
        https://checkout.stripe.com
        https://www.google-analytics.com
        https://pagead2.googlesyndication.com
        https://googleads.g.doubleclick.net;
      font-src 'self' data: https://fonts.gstatic.com;
      object-src 'none';
      frame-src 'self' https://js.stripe.com https://checkout.stripe.com;
      manifest-src 'self';
      worker-src 'self' blob:;
    """
    Permissions-Policy = "geolocation=(), microphone=(), camera=(), interest-cohort=()"
    Referrer-Policy = "strict-origin-when-cross-origin"
    X-Content-Type-Options = "nosniff"
    X-Frame-Options = "SAMEORIGIN"
